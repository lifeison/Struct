typedef int newtp;
struct node//описание структуры
{
newtp data;
node *next;
node *pred;
} *First=NULL;
void push(newtp val,int pos)//добавить узел в список в определённую позицию
{
node *a=new node;
a-&gt;data=val;
if(First==NULL)//если это первый элемент в списке
{
a-&gt;next=a;
a-&gt;pred=a;
First=a;
}
else
{
node *t=First;
for(int i=pos;i&gt;1;i--,t=t-&gt;next);
t-&gt;pred-&gt;next=a;
a-&gt;pred=t-&gt;pred;
a-&gt;next=t;//добавляем элемент перед t
t-&gt;pred=a;
}
}
newtp pop(int pos)//удалить узел по индексу из списка
{
if(First==NULL) return (newtp)0;//спсок пуст
newtp val;
if(First==First-&gt;next)//если это последний элемент в списке
{
val=First-&gt;data;
delete First;
First=NULL;
}
else
{
node *t=First;
for(int i=pos;i&gt;1;i--,t=t-&gt;next);
if(t==First)First=t-&gt;next;//если пытаемся удалить 1-ый элемент то голова указывает на 2-ой 
t-&gt;pred-&gt;next=t-&gt;next;//удаляем t элемент
t-&gt;next-&gt;pred=t-&gt;pred;
val=t-&gt;data;
delete t;
}
return val;
}
void clean()//удалить все элементы из списка
{
if(First==NULL)return ;
for(node *a=First-&gt;next;a!=First;a=a-&gt;next)delete a;
delete First;
First=NULL;
}
void view()//просмотр элементов в списке
{
if(First==NULL)return ;
node *a=First;
do
{
printf (&quot;Value=%d \n&quot;,(int)a-&gt;data);
a=a-&gt;next;
}while(a!=First);
}